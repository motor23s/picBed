常见开源协议介绍
原创 单一色调 JAVA日知录 5天前
图片


世界上的开源许可证（Open Source License）大概有上百种，今天我们来介绍下集几种我们常见的开源协议。大致有GPL、BSD、MIT、Mozilla、Apache和LGPL等。

图片
BSD
BSD是"Berkeley Software Distribution"的缩写，意思是"伯克利软件发行版"。

BSD开源协议:是一个给于使用者很大自由的协议。可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件:

如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。
如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。
不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。
BSD代码鼓励代码共享，也允许使用或在BSD代码上开发商业软件发布和销售，因此很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。


Apache Licence
Apache Licence (Apache 许可证)，是Apache软件基金会发布的一个自由软件许可证，最初是为Apache http服务器而撰写。

该协议和BSD类似，同样鼓励代码共享和最终原作者的著作权，同样允许源代码修改和再发布。

Apache Licence也是对商业应用友好的许可，使用者可以在需要的时候修改代码来满足并作为开源或商业产品的发布/销售。

但是也需要遵循以下条件：

需要给代码的用户一份Apache Licence。
如果修改了代码，需要在被修改的代码中说明。
在衍生的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。
如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache Licence。你可以再Notice中增加自己的许可，但是不可以表现为对Apache Licence构成更改。

如何引用Apache Licence 2.0条款
Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.



GPL
GPL（GUN General Public License）: GUN 通用公共许可协议。

「Linux采用了GPL」

GPL协议和BSD, Apache Licence等鼓励代码重用的许可很不一样。GPL的出发点是代码的开源 / 免费使用和引用 / 修改 / 衍生代码的开源 / 免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。这也就是为什么我们能用免费的各种linux，包括商业公司的linux和linux上各种各样的由个人，组织，以及商业软件公司开发的免费软件了。

LPGL
LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用/修改/衍生之GPL类库的的软件必须采用GPL协议不同。LGPL允许商业软件通过类库引用(ink)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。

但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。因此LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础。

商业软件采用。

GPL/LGPL都保障原作者的知识产权，避免有人利用开源代码复制并开发类似的产品。

MIT
MIT是和BSD一样是宽范的许可协议,源自麻省理工学院(Massachusetts Institute of Technology,MiT) ，又称×11协议。作者只想保留版权，而无任何其他的限制。

使用者只需在发布的源代码、二进制可执行文件相关文档中包含MIT许可协议声明，便可自由的使用、修改源代码、作为商业软件再发布、甚至使用开源机构名字做产品的市场推广。

这个协议唯一的条件就是在修改后的代码或者发行包包含原作者的许可信息。适用商业软件。使用MIT的软件项目有:jquery、Node.js。

MPL(Mozilla Public License 1.1)
MPL协议允许免费重发布、免费修改，但要求修改后的代码版权归软件的发起者。这种授权维护了商业软件的利益，它要求基于这种软件的修改无偿贡献版权给该软件。这样，围绕该软件的所有代码的版权都集中在发起开发人的手中。但MPL是允许修改，无偿使用得。MPL软件对链接没有要求。

EPL（Eclipse Public License 1.0）
EPL允许Recipients任意使用、复制、分发、传播、展示、修改以及改后闭源的二次商业发布。

使用EPL协议，需要遵循以下规则：

当一个Contributors将源码的整体或部分再次开源发布的时候，必须继续遵循EPL开源协议来发布,而不能改用其他协议发布.除非你得到了原"源码" Owner的授权;
EPL协议下，你可以将源码不做任何修改来商业发布。但如果你要发布修改后的源码，或者当你再发布的是Object code的时候，你必须声明它的Source Code是可以获取的，而且要告知获取方法;
当你需要将EPL下的源码作为一部分跟其他私有的源码混和着成为一个Project发布的时候，你可以将整个Project/Product以私人的协议发布,但要声明哪一部分代码是EPL下的，而且声明那部分代码继续遵循EPL;
独立的模块(Separate Module)，不需要开源。


小结
简单的说，就是你使用了GPL许可证的软件，那么你的软件产品就被GPL“传染”了，也必须“自由”！这对国内的商业软件开发商来说是很难接受的。



但是LGPL, Apache Licence, BSD就不存在这个问题，后两者只要求你对软件原作者的工作进行必要的认可和尊重就行了，所以这是适合商业应用的。



所以在选择应用开源软件时，一定要明白自己的用途，选择合适许可证下的软件。
